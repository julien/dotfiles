set rtp+=$HOME/.vim-plugins/skim
set rtp+=$HOME/.vim-plugins/asyncomplete.vim
set rtp+=$HOME/.vim-plugins/async.vim
set rtp+=$HOME/.vim-plugins/vim-lsp
set rtp+=$HOME/.vim-plugins/asyncomplete-lsp.vim
set rtp+=$HOME/.vim-plugins/vim-lsp-settings

filetype plugin indent on
syntax on
let mapleader="\<Space>"

set autoread
set backspace=indent,eol,start
set completeopt+=menu,menuone,noinsert,noselect
set hidden
set ignorecase incsearch
set number
set lazyredraw
set mouse=a
set nobackup nowritebackup
set nocursorline
set noerrorbells visualbell t_vb=""
set noswapfile
set nowrap
set path+=**
set scrolljump=8
set shiftwidth=2 tabstop=2
set synmaxcol=200 ttyfast
set wildignore+=.git/*,.gradle/*,node_modules/*
set wildmenu wildmode=longest,list,full

im <F1> <Nop>
nn j gj
nn k gk
nn / /\v
nn n nzz
nn <F1> :set hls!<CR>
nn <F2> :set invlist!<CR>
nn <F3> :set number!<CR>
nn <silent> <leader>e :Explore<CR>
nn <silent> <leader>q :%bw!<CR>
nm <silent> <C-t> :SK<CR>
nm <silent> <C-S-p> :pc<CR>
vn < <gv
vn > >gv

au BufWritePre * :%s/\s\+$//e " strip trailing whitespace on save
au BufNewFile,BufRead *.jsx set syntax=javascript
au BufNewFile,BufRead *.tsx set syntax=typescript
au FileType qf setlocal wrap

ino <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
ino <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
ino <expr> <cr> pumvisible() ? "\<C-y>\<cr>" : "\<cr>"
autocmd! CompleteDone * if pumvisible() == 0 | pclose | endif
nm gD <plug>(lsp-document-diagnostics)
nm gR <plug>(lsp-rename)
nm gd <plug>(lsp-definition)
nm gp <plug>(lsp-peek-definition)
nm gr <plug>(lsp-references)

let g:netrw_banner = 0
let g:netrw_cursor = 0
let g:netrw_dirhistmax = 0
let g:netrw_preview = 1

colo wombat
au! GuiEnter * silent set visualbell t_vb=""
if has("gui_running")
  set go=""
  set guicursor+=a:blinkon0
  set guifont=Input\ 12
endif
